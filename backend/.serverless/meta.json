{
  "/Users/apple/Group15_Phase2/backend": {
    "versionSfCore": null,
    "versionFramework": "4.4.7",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "/Users/apple/Group15_Phase2/backend",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "products-api",
      "frameworkVersion": "4.4.7",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "lambdaHashingVersion": "20201221",
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:PutItem",
                  "dynamodb:GetItem",
                  "dynamodb:DeleteItem",
                  "dynamodb:Scan"
                ],
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "ProductsTable",
                      "Arn"
                    ]
                  }
                ]
              }
            ]
          }
        },
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "HealthLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/products-api-dev-health"
              }
            },
            "UploadUnderscorepackageLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/products-api-dev-upload_package"
              }
            },
            "GetUnderscoreratingLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/products-api-dev-get_rating"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "products-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/products-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/products-api-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem",
                            "dynamodb:GetItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:Scan"
                          ],
                          "Resource": [
                            {
                              "Fn::GetAtt": [
                                "ProductsTable",
                                "Arn"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "products-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "HealthLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/products-api/dev/1730949176217-2024-11-07T03:12:56.217Z/products-api.zip"
                },
                "Handler": "src/handlers.health",
                "Runtime": "nodejs20.x",
                "FunctionName": "products-api-dev-health",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "HealthLogGroup"
              ]
            },
            "UploadUnderscorepackageLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/products-api/dev/1730949176217-2024-11-07T03:12:56.217Z/products-api.zip"
                },
                "Handler": "src/handlers.upload_package",
                "Runtime": "nodejs20.x",
                "FunctionName": "products-api-dev-upload_package",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UploadUnderscorepackageLogGroup"
              ]
            },
            "GetUnderscoreratingLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/products-api/dev/1730949176217-2024-11-07T03:12:56.217Z/products-api.zip"
                },
                "Handler": "src/handlers.get_rating",
                "Runtime": "nodejs20.x",
                "FunctionName": "products-api-dev-get_rating",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetUnderscoreratingLogGroup"
              ]
            },
            "HealthLambdaVersionpr510epxMUN4YyJlSWxVPYADJvAqhuLVawIj3zQoc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "HealthLambdaFunction"
                },
                "CodeSha256": "lJg21XbjIlDvCfdNmENEWYy/Yw89cvX6Y6YG94GwJog="
              }
            },
            "UploadUnderscorepackageLambdaVersiontXPjB52ZmMMymgyzBqeEM7LCi4D4spz4dg8tAK6iI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UploadUnderscorepackageLambdaFunction"
                },
                "CodeSha256": "lJg21XbjIlDvCfdNmENEWYy/Yw89cvX6Y6YG94GwJog="
              }
            },
            "GetUnderscoreratingLambdaVersionN5TCH18acTf2M3tIui7FIgDZqZEbS7oVwpuvn1fKD2s": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetUnderscoreratingLambdaFunction"
                },
                "CodeSha256": "lJg21XbjIlDvCfdNmENEWYy/Yw89cvX6Y6YG94GwJog="
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-products-api",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "HealthLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "HealthLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationHealth": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "HealthLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostHealth": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /health",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationHealth"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationHealth"
            },
            "UploadUnderscorepackageLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UploadUnderscorepackageLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationUploadUnderscorepackage": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "UploadUnderscorepackageLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostPackage": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /package",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationUploadUnderscorepackage"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationUploadUnderscorepackage"
            },
            "GetUnderscoreratingLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetUnderscoreratingLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGetUnderscorerating": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetUnderscoreratingLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetPackageIdVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /package/{id}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGetUnderscorerating"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGetUnderscorerating"
            },
            "ProductsTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "Packages",
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": 1,
                  "WriteCapacityUnits": 1
                },
                "AttributeDefinitions": [
                  {
                    "AttributeName": "productID",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "productID",
                    "KeyType": "HASH"
                  }
                ]
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-products-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "HealthLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "HealthLambdaVersionpr510epxMUN4YyJlSWxVPYADJvAqhuLVawIj3zQoc"
              },
              "Export": {
                "Name": "sls-products-api-dev-HealthLambdaFunctionQualifiedArn"
              }
            },
            "UploadUnderscorepackageLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UploadUnderscorepackageLambdaVersiontXPjB52ZmMMymgyzBqeEM7LCi4D4spz4dg8tAK6iI"
              },
              "Export": {
                "Name": "sls-products-api-dev-UploadUnderscorepackageLambdaFunctionQualifiedArn"
              }
            },
            "GetUnderscoreratingLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetUnderscoreratingLambdaVersionN5TCH18acTf2M3tIui7FIgDZqZEbS7oVwpuvn1fKD2s"
              },
              "Export": {
                "Name": "sls-products-api-dev-GetUnderscoreratingLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-products-api-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-products-api-dev-HttpApiUrl"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "health": {
          "handler": "src/handlers.health",
          "events": [
            {
              "httpApi": {
                "path": "/health",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/health"
            }
          ],
          "name": "products-api-dev-health",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "HealthLambdaVersionpr510epxMUN4YyJlSWxVPYADJvAqhuLVawIj3zQoc"
        },
        "upload_package": {
          "handler": "src/handlers.upload_package",
          "events": [
            {
              "httpApi": {
                "path": "/package",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/package"
            }
          ],
          "name": "products-api-dev-upload_package",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UploadUnderscorepackageLambdaVersiontXPjB52ZmMMymgyzBqeEM7LCi4D4spz4dg8tAK6iI"
        },
        "get_rating": {
          "handler": "src/handlers.get_rating",
          "events": [
            {
              "httpApi": {
                "path": "/package/{id}",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/package/{id}"
            }
          ],
          "name": "products-api-dev-get_rating",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetUnderscoreratingLambdaVersionN5TCH18acTf2M3tIui7FIgDZqZEbS7oVwpuvn1fKD2s"
        }
      },
      "resources": {
        "Resources": {
          "ProductsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Packages",
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "AttributeDefinitions": [
                {
                  "AttributeName": "productID",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "productID",
                  "KeyType": "HASH"
                }
              ]
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "# Welcome to Serverless!\n#\n\nservice: products-api\n# app and org for use with dashboard.serverless.com\n\nframeworkVersion: '4.4.7'  \n\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  lambdaHashingVersion: 20201221\n\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action:\n            - \"dynamodb:PutItem\"\n            - \"dynamodb:GetItem\"\n            - \"dynamodb:DeleteItem\"\n            - \"dynamodb:Scan\"\n          Resource:\n            - { \"Fn::GetAtt\": [\"ProductsTable\", \"Arn\"] }\n\n            \nfunctions:\n  health:\n    handler: src/handlers.health\n    events:\n      - httpApi:\n          path: /health\n          method: post\n  upload_package:\n    handler: src/handlers.upload_package\n    events:\n      - httpApi:\n          path: /package\n          method: post\n  get_rating:\n    handler:  src/handlers.get_rating\n    events:\n      - httpApi:\n          path: /package/{id}\n          method: get\n  # update_package:\n  #   handler: src/handlers.update_package\n  #   events:\n  #     - httpApi:\n  #         path: /package\n  #         method: PUT\n\n# you can add CloudFormation resource templates here\nresources:\n  Resources:\n    ProductsTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: Packages\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        AttributeDefinitions:\n          - AttributeName: productID\n            AttributeType: S\n        KeySchema:\n          - AttributeName: productID\n            KeyType: HASH",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "6a18c2f5b99c46fd1e468afb10f36489",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "41fe8795-1e41-4b5b-a257-0c5f8e5845df",
    "orgName": "purdue",
    "userId": "KXPRSGtZg92rR4LPvS",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "purdue",
    "subscription": null,
    "userEmail": "varunvenkatesh3@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "448049804598",
    "projectType": "traditional",
    "versionSf": "4.4.7",
    "serviceProviderAwsCfStackName": "products-api-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:448049804598:stack/products-api-dev/a95415d0-8e51-11ef-973a-0e6f16ab4627",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:448049804598:stack/products-api-dev/a95415d0-8e51-11ef-973a-0e6f16ab4627",
    "serviceProviderAwsCfStackCreated": "2024-10-19T19:38:05.684Z",
    "serviceProviderAwsCfStackUpdated": "2024-11-07T03:13:02.626Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GetUnderscoreratingLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:448049804598:function:products-api-dev-get_rating:49",
        "Description": "Current Lambda function version",
        "ExportName": "sls-products-api-dev-GetUnderscoreratingLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HealthLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:448049804598:function:products-api-dev-health:102",
        "Description": "Current Lambda function version",
        "ExportName": "sls-products-api-dev-HealthLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "t65oyfcrxb",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-products-api-dev-HttpApiId"
      },
      {
        "OutputKey": "UploadUnderscorepackageLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:448049804598:function:products-api-dev-upload_package:99",
        "Description": "Current Lambda function version",
        "ExportName": "sls-products-api-dev-UploadUnderscorepackageLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "products-api-dev-serverlessdeploymentbucket-ir7krockfzsv",
        "ExportName": "sls-products-api-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://t65oyfcrxb.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-products-api-dev-HttpApiUrl"
      }
    ]
  }
}